package com.orleven.tentacle.module.pentest;

import com.orleven.tentacle.module.bean.AssetBean;
import com.orleven.tentacle.module.bean.VulnerBean;

/**
 * 针对某个漏洞的虚拟利用基础类
 * @author orleven
 * @time  2016年12月15日
 */
public abstract class AbstractScript{
	
	/**
	 * 漏洞信息
	 */
	private VulnerBean vulnerBean;

//	/**
//	 * 链接目的的超时时间
//	 */
//	private int connectTimeout;    
	
//	/**
//	 * 是否设置代理
//	 */
//	private boolean isProxy ;    
	

	/**
	 * 当前请求数量
	 */
	private int currentCount ;

	/**
	 * 总请求数量
	 */
	private int totalCount;
	
	public AbstractScript(){
		vulnerBean = new VulnerBean();
	}
	
	public void setVulnerBean(VulnerBean vulnerBean){
		this.vulnerBean =  vulnerBean;
	}
	
	public VulnerBean getVulnerBean(){
		return vulnerBean;
	}

//	public void setIsProxy(boolean isProxy) {
//		this.isProxy = isProxy;
//	}
	
//	public boolean IsProxy() {
//		return isProxy;
//	}
	

	public void setCurrentCount(int currentCount) {
		this.currentCount = currentCount;
	}
	
	public int getCurrentCount() {
		return currentCount;
	}
	
	public void setTotalCount(int totalCount) {
		this.totalCount = totalCount;
	}
	
	public int getTotalCount() {
		return totalCount;
	}
	
	/**
	 * 返回当前poc进度
	 * @return
	 */
	public String getSchedule() {
		String str = "("+currentCount+"/"+totalCount+")";
		return str;
	}
}
